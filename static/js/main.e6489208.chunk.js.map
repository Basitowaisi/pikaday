{"version":3,"sources":["Pikaday.js","App.js","reportWebVitals.js","index.js"],"names":["Pikaday","props","onChange","value","minDate","maxDate","isDayBlocked","pickWholeWeek","showMonthAfterYear","showDaysInNextAndPreviousMonths","enableSelectionDaysInNextAndPreviousMonths","visibleMonths","mainCalendarDirection","events","className","blurFieldOnSelect","onOpen","onClose","onDraw","disableWeekends","bound","format","id","name","placeholder","formatOutputAs","yearRange","useState","date","setDate","pikadayRef","useRef","handleSelect","formattedDate","moment","useEffect","pikaday","field","current","onSelect","defaultDate","setDefaultDate","disableDayFn","numberOfMonths","mainCalendar","theme","keyboardInput","placeholderOption","console","log","type","readOnly","ref","defaultProps","Date","getFullYear","App","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAMA,SAASA,EAAQC,GAAQ,IAAD,EAEpBC,EAyBED,EAzBFC,SACAC,EAwBEF,EAxBFE,MACAC,EAuBEH,EAvBFG,QACAC,EAsBEJ,EAtBFI,QACAC,EAqBEL,EArBFK,aACAC,EAoBEN,EApBFM,cACAC,EAmBEP,EAnBFO,mBACAC,EAkBER,EAlBFQ,gCACAC,EAiBET,EAjBFS,2CACAC,EAgBEV,EAhBFU,cACAC,EAeEX,EAfFW,sBACAC,EAcEZ,EAdFY,OACAC,EAaEb,EAbFa,UACAC,EAYEd,EAZFc,kBACAC,EAWEf,EAXFe,OACAC,EAUEhB,EAVFgB,QACAC,EASEjB,EATFiB,OACAC,EAQElB,EARFkB,gBACAC,EAOEnB,EAPFmB,MACAC,EAMEpB,EANFoB,OACAC,EAKErB,EALFqB,GACAC,EAIEtB,EAJFsB,KACAC,EAGEvB,EAHFuB,YACAC,EAEExB,EAFFwB,eACAC,EACEzB,EADFyB,UA1BoB,EA6BEC,mBAASxB,GA7BX,mBA6BfyB,EA7Be,KA6BTC,EA7BS,KA8BhBC,EAAaC,mBAEbC,EAAe,SAACJ,GACpBC,EAAQD,GACR,IAAIK,EAAgBL,EAChBH,IACFQ,EAAgBC,IAAOD,GAAeZ,OAAOI,IAE/CvB,EAAS+B,IAGXE,qBAAU,WACR,IAAIC,IAAQ,CACVC,MAAOP,EAAWQ,QAClBjB,SACAkB,SAAUP,EACVQ,YAAaZ,EACba,gBAAgB,EAChBC,aAAcpC,EACdE,qBACAD,gBACAE,kCACAC,6CACAN,UACAC,UACAsC,eAAgBhC,EAChBiC,aAAchC,EACdC,SACAgC,MAAO/B,EACPC,oBACAC,SACAC,UACAC,SACAC,kBACA2B,eAAe,EACf1B,QACAM,gBAED,IAEH,IAAMqB,EAAoB5C,EAAQ,GAAK,CAAEqB,eAGzC,OADAwB,QAAQC,IAAR,UAAYnB,EAAWQ,eAAvB,aAAY,EAAoBnC,OAE9B,+CACE+C,KAAK,OACL5B,GAAIA,EACJC,KAAMA,EACN4B,UAAQ,GACJJ,GALN,IAMEK,IAAKtB,KAKX9B,EAAQqD,cAAR,GACE5B,eAAgB,aAChBJ,OAAQ,aACRd,eAAe,EACfC,oBAAoB,EACpBC,iCAAiC,EACjCC,4CAA4C,EAC5CC,cAAe,EACfC,sBAAuB,OACvBC,OAAQ,GACRC,UAAW,KACXC,mBAAmB,EACnBI,iBAAiB,EACjBC,OAAO,GAbT,uBAcU,cAdV,0BAea,CAAC,MAAM,IAAIkC,MAAOC,gBAf/B,GA4CevD,QCrHAwD,MAff,WACE,OACE,8BACE,cAAC,EAAD,CACElC,GAAG,MACHC,KAAK,MACLrB,SAAU,SAACuD,GAAD,OAAST,QAAQC,IAAIQ,IAC/BtD,MAAO,IAAImD,KACX9B,YAAY,uBACZH,OAAO,kBCAAqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6489208.chunk.js","sourcesContent":["import moment from \"moment\"\nimport pikaday from \"pikaday\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport \"pikaday/css/pikaday.css\"\nimport propTypes from \"prop-types\"\n\nfunction Pikaday(props) {\n  const {\n    onChange,\n    value,\n    minDate,\n    maxDate,\n    isDayBlocked,\n    pickWholeWeek,\n    showMonthAfterYear,\n    showDaysInNextAndPreviousMonths,\n    enableSelectionDaysInNextAndPreviousMonths,\n    visibleMonths,\n    mainCalendarDirection,\n    events,\n    className,\n    blurFieldOnSelect,\n    onOpen,\n    onClose,\n    onDraw,\n    disableWeekends,\n    bound,\n    format,\n    id,\n    name,\n    placeholder,\n    formatOutputAs,\n    yearRange,\n  } = props\n\n  const [date, setDate] = useState(value)\n  const pikadayRef = useRef()\n\n  const handleSelect = (date) => {\n    setDate(date)\n    let formattedDate = date\n    if (formatOutputAs) {\n      formattedDate = moment(formattedDate).format(formatOutputAs)\n    }\n    onChange(formattedDate)\n  }\n\n  useEffect(() => {\n    new pikaday({\n      field: pikadayRef.current,\n      format,\n      onSelect: handleSelect,\n      defaultDate: date,\n      setDefaultDate: true,\n      disableDayFn: isDayBlocked,\n      showMonthAfterYear,\n      pickWholeWeek,\n      showDaysInNextAndPreviousMonths,\n      enableSelectionDaysInNextAndPreviousMonths,\n      minDate,\n      maxDate,\n      numberOfMonths: visibleMonths,\n      mainCalendar: mainCalendarDirection,\n      events,\n      theme: className,\n      blurFieldOnSelect,\n      onOpen,\n      onClose,\n      onDraw,\n      disableWeekends,\n      keyboardInput: false,\n      bound,\n      yearRange,\n    })\n  }, [])\n\n  const placeholderOption = value ? {} : { placeholder }\n\n  console.log(pikadayRef.current?.value)\n  return (\n    <input\n      type=\"text\"\n      id={id}\n      name={name}\n      readOnly\n      {...placeholderOption}\n      ref={pikadayRef}\n    />\n  )\n}\n\nPikaday.defaultProps = {\n  formatOutputAs: \"DD-MM-YYYY\",\n  format: \"DD-MM-YYYY\",\n  pickWholeWeek: false,\n  showMonthAfterYear: false,\n  showDaysInNextAndPreviousMonths: false,\n  enableSelectionDaysInNextAndPreviousMonths: false,\n  visibleMonths: 1,\n  mainCalendarDirection: \"left\",\n  events: [],\n  className: null,\n  blurFieldOnSelect: true,\n  disableWeekends: false,\n  bound: true,\n  format: \"MM/DD/YYYY\",\n  yearRange: [1950, new Date().getFullYear()],\n}\n\nPikaday.propTypes = {\n  events: propTypes.array,\n  yearRange: propTypes.array,\n  bound: propTypes.bool,\n  disableWeekends: propTypes.bool,\n  blurFieldOnSelect: propTypes.bool,\n  onDraw: propTypes.func,\n  onChange: propTypes.func,\n  onClose: propTypes.func,\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  pickWholeWeek: propTypes.bool,\n  showMonthAfterYear: propTypes.bool,\n  showDaysInNextAndPreviousMonths: propTypes.bool,\n  enableSelectionDaysInNextAndPreviousMonths: propTypes.bool,\n  isDayBlocked: propTypes.func,\n  className: propTypes.string,\n  formatOutputAs: propTypes.string,\n  format: propTypes.string,\n  mainCalendarDirection: propTypes.string,\n  visibleMonths: propTypes.number,\n  minDate: propTypes.instanceOf(Date),\n  maxDate: propTypes.instanceOf(Date),\n  value: propTypes.instanceOf(Date),\n}\n\nexport default Pikaday\n","import Pikaday from \"./Pikaday\"\nimport React from \"react\"\n\nfunction App() {\n  return (\n    <div>\n      <Pikaday\n        id=\"dob\"\n        name=\"dob\"\n        onChange={(val) => console.log(val)}\n        value={new Date()}\n        placeholder=\"Please choose a date\"\n        format=\"DD-MM-YYYY\"\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}